<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.smhrd</groupId>
  <artifactId>Killlogram</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  
    <packaging>war</packaging>
 


  <name>Killlogram Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
  </properties>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>
    
    
    <!--Servlet 사용할 수 있기 위한 라이브러리-->
	    <!-- https://mvnrepository.com/artifact/javax.servlet/javax.servlet-api -->
	<dependency>
	    <groupId>javax.servlet</groupId>
	    <artifactId>javax.servlet-api</artifactId>
	    <version>3.1.0</version>
	    <scope>provided</scope>
	</dependency><dependency>
	<groupId>org.sonatype.aether</groupId>
	<artifactId>aether-api</artifactId>
	<version>1.7</version>
	</dependency>
	
	
	
	<!--JDBC  사용할 수 있기 위한 라이브러리-->
	    <!-- https://mvnrepository.com/artifact/com.oracle.database.jdbc/ojdbc6 -->
	<dependency>
	    <groupId>com.oracle.database.jdbc</groupId>
	    <artifactId>ojdbc6</artifactId>
	    <version>11.2.0.4</version>
	</dependency>


	<!--MyBatis 사용할 수 있기 위한 라이브러리-->
	    <!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
	<dependency>
	    <groupId>org.mybatis</groupId>
	    <artifactId>mybatis</artifactId>
	    <version>3.4.6</version>
	</dependency>

	<!-- Spring boot -->
	<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot -->
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot</artifactId>
	    <version>2.1.3.RELEASE</version>
	</dependency>

	<!-- spring-boot-starter-websocket -->
	<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-websocket -->
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-websocket</artifactId>
	    <version>1.5.16.RELEASE</version>
	</dependency>

	<!-- gradle -->
    <!-- https://mvnrepository.com/artifact/com.android.tools.build/gradle -->
	<dependency>
	    <groupId>com.android.tools.build</groupId>
	    <artifactId>gradle</artifactId>
	    <version>1.5.0</version>
	</dependency>


  
    
  </dependencies>

  <build>
    <finalName>Killlogram</finalName>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- see http://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_war_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        
  
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>3.2.2</version>
        </plugin> 
       

        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
